{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst input = document.querySelector('#datetime-picker');\nconst timer = document.querySelector('.timer');\nlet userSelectedDate;\nconst startBtn = document.querySelector('[data-start]');\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    if (selectedDates[0] < new Date()) {\n      startBtn.disabled = true;\n      iziToast.show({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        titleColor: 'white',\n        messageColor: 'white',\n        backgroundColor: 'rgb(239, 64, 64)',\n        iconUrl: 'src/img/alert.svg',\n        position: 'topCenter',\n        progressBarColor: 'rgb(181, 27, 27)'\n    });\n    }\n    startBtn.disabled = false;\n    userSelectedDate = selectedDates[0];\n  },\n};\n\nflatpickr(input, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addZero(value) {\n  return String(value).padStart(2, \"0\");\n}\n\nstartBtn.addEventListener(\"click\", () => {\n  const intervalID = setInterval(() => {\n    const diff = userSelectedDate - Date.now();\n    if (diff <= 1000) { clearInterval(intervalID) };\n    const { days, hours, minutes, seconds } = convertMs(diff);\n  \n    timer.querySelector(\"[data-days]\").textContent = addZero(days);\n    timer.querySelector(\"[data-hours]\").textContent = addZero(hours);\n    timer.querySelector(\"[data-minutes]\").textContent = addZero(minutes);\n    timer.querySelector(\"[data-seconds]\").textContent = addZero(seconds);\n  }, 1000);\n});\n\n"],"names":["input","timer","userSelectedDate","startBtn","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addZero","value","intervalID","diff"],"mappings":"+IAUA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAQ,SAAS,cAAc,QAAQ,EAC7C,IAAIC,EACJ,MAAMC,EAAW,SAAS,cAAc,cAAc,EACtDA,EAAS,SAAW,GAEpB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EACxBA,EAAc,CAAC,EAAI,IAAI,OACzBF,EAAS,SAAW,GACpBG,EAAS,KAAK,CACZ,MAAO,QACP,QAAS,qCACT,WAAY,QACZ,aAAc,QACd,gBAAiB,mBACjB,QAAS,oBACT,SAAU,YACV,iBAAkB,kBAC1B,CAAK,GAEDH,EAAS,SAAW,GACpBD,EAAmBG,EAAc,CAAC,CACnC,CACH,EAEAE,EAAUP,EAAOI,CAAO,EAExB,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAQC,EAAO,CACtB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEAZ,EAAS,iBAAiB,QAAS,IAAM,CACvC,MAAMa,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAOf,EAAmB,KAAK,IAAG,EACpCe,GAAQ,KAAQ,cAAcD,CAAU,EAC5C,KAAM,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGL,EAAUS,CAAI,EAExDhB,EAAM,cAAc,aAAa,EAAE,YAAca,EAAQJ,CAAI,EAC7DT,EAAM,cAAc,cAAc,EAAE,YAAca,EAAQH,CAAK,EAC/DV,EAAM,cAAc,gBAAgB,EAAE,YAAca,EAAQF,CAAO,EACnEX,EAAM,cAAc,gBAAgB,EAAE,YAAca,EAAQD,CAAO,CACpE,EAAE,GAAI,CACT,CAAC"}